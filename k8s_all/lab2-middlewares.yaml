apiVersion: v1
kind: Namespace
metadata:
  name: lab2-middlewares

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: lab2-middlewares
data:
  init.sql: |
    create database if not exists `ase_user_service_prod`;
    create database if not exists `ase_notification_service_prod`;
    create database if not exists `ase_conference_service_prod`;
    create database if not exists `ase_contribute_service_prod`;

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: lab2-middlewares
spec:
  serviceName: mysql
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:latest
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
            - name: mysql-config
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
      volumes:
        - name: mysql-config
          configMap:
            name: mysql-config
  volumeClaimTemplates:
    - metadata:
        name: mysql-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 500Mi
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: lab2-middlewares
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: lab2-middlewares
data:
  redis.conf: |
    bind 0.0.0.0
    protected-mode no
    daemonize no
    requirepass 5iwrnpFC4BRqADn6qCFV
    appendonly yes

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: lab2-middlewares
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:latest
          volumeMounts:
            - name: redis-data
              mountPath: /data
            - name: redis-config
              mountPath: /usr/local/etc/redis
              readOnly: true
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-pvc-redis-0
        - name: redis-config
          configMap:
            name: redis-config
  volumeClaimTemplates:
    - metadata:
        name: redis-pvc
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 500Mi

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: lab2-middlewares
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
